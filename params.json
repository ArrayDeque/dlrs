{"name":"DLRS Developer Guide","tagline":"A realtime distributed learning record store","body":"# Developer Guide\r\nDLRS exposes a few endpoints for your apps to store and retrieve atomic user activities. Every 'measurable' user activity is represented by a 'Statement' or action. \r\n\r\nA 'Statement' can be sent to a DLRS with 3 primary payload details:\r\n\r\n* **Actor** - Who is this user?\r\n* **Verb** - What did he do?\r\n* **Object** - What is he learning?\r\n\r\n## To record a statement\r\n**Case -** A user is going through a learning activity and I want to record what he is doing so I can analyze the progress later.\r\n\r\nTo record a Statement, send a POST request.\r\n\r\n```http\r\nPOST /learn/statement\r\n```\r\nwith the following JSON request body:\r\n\r\n```json\r\n{\r\n  \"actor\": {\r\n    \"objectType\": \"User\",\r\n    \"name\": \"Abel Osbert\",\r\n    \"mbox\": \"mailto:aosbert@example.com\"\r\n  },\r\n  \"verb\": {\r\n    \"id\": \"http://adlnet.gov/expapi/verbs/completed\",\r\n    \"display\": {\r\n      \"en-US\": \"completed\"\r\n    }\r\n  },\r\n  \"object\": {\r\n    \"objectType\": \"Activity\",\r\n    \"id\": \"http://www.example.com/activities/001\",\r\n    \"definition\": {\r\n      \"name\": {\r\n        \"en-US\": \"Example Activity\"\r\n      },\r\n    \"type\": \"http://adlnet.gov/expapi/activities/course\"\r\n    }\r\n  }\r\n}\r\n```\r\nThis API returns a Statement ID.\r\n\r\nNote that DLRS looks for 3 JSON fragments:\r\n\r\n```java\r\n  JSONObject actorJSON = jsonObject.getJSONObject(\"actor\");\r\n  JSONObject verbJSON = jsonObject.getJSONObject(\"verb\");\r\n  JSONObject objectJSON = jsonObject.getJSONObject(\"object\");\r\n```\r\n\r\nSo, ensure that the JSON payload in the request body is well-formed and contains these 3 mandatory fragments - actor, verb, and object.\r\n\r\nWhen you record a statement, the statement is stored in an in-memory TreeMap that gets persisted to disk when JVM shuts down. Statements are not immediately written to disk. Hence, you need to do a clean server shut down to activate the JVM shutdown hooks that will write the TreeMaps to disk.\r\n\r\n\r\nA JavaScript example:\r\n\r\n```javascript\r\nvar settings = {\r\n  \"async\": true,\r\n  \"crossDomain\": true,\r\n  \"url\": \"http://127.0.0.1:8678/learn/statement\",\r\n  \"method\": \"POST\",\r\n  \"headers\": {\r\n    \"content-type\": \"application/json\",\r\n    \"cache-control\": \"no-cache\"\r\n  },\r\n  \"processData\": false,\r\n  \"data\": \"{\\n\\\"actor\\\": {\\n\\\"name\\\":\\\"Sally\\\",\\n\\\"mbox\\\":\\\"mailto:sally@example.com\\\"\\n},\\n\\\"verb\\\":{\\n\\\"id\\\":\\\"http://adlnet.gov/expapi/verbs/experienced\\\",\\n\\\"display\\\":{\\\"en-US\\\":\\\"experienced\\\"}\\n},\\n\\\"object\\\":{\\n\\\"id\\\":\\\"http://example.com/activities/solo-hang-gliding\\\",\\n\\\"definition\\\": {\\n\\\"name\\\": {\\\"en-US\\\":\\\"Hitchhiking\\\" }\\n}\\n}\\n}\"\r\n}\r\n\r\n$.ajax(settings).done(function (response) {\r\n  console.log(response);\r\n});\r\n```\r\n\r\nA Python example:\r\n\r\n```python\r\nimport http.client\r\n\r\nconn = http.client.HTTPConnection(\"127.0.0.1:8678\")\r\n\r\npayload = \"{\\n\\\"actor\\\": {\\n\\\"name\\\": \\\"Sally\\\",\\n\\\"mbox\\\": \\\"mailto:sally@example.com\\\"\\n},\\n\\\"verb\\\": {\\n\\\"id\\\":\\\"http://adlnet.gov/expapi/verbs/experienced\\\",\\n\\\"display\\\": {\\\"en-US\\\": \\\"experienced\\\"}\\n},\\n\\\"object\\\": {\\n\\\"id\\\": \\\"http://example.com/activities/solo-hang-gliding\\\",\\n\\\"definition\\\": {\\n\\\"name\\\": { \\\"en-US\\\":\\\"Hitchhiking\\\" }\\n}\\n}\\n}\"\r\n\r\nheaders = {\r\n    'content-type': \"application/json\",\r\n    'cache-control': \"no-cache\"\r\n    }\r\n\r\nconn.request(\"POST\", \"/learn/statement\", payload, headers)\r\n\r\nres = conn.getresponse()\r\ndata = res.read()\r\n\r\nprint(data.decode(\"utf-8\"))\r\n```\r\n\r\nA PHP example:\r\n\r\n```PHP\r\n<?php\r\n\r\n$client = new http\\Client;\r\n$request = new http\\Client\\Request;\r\n\r\n$body = new http\\Message\\Body;\r\n$body->append('{\r\n    \"actor\": {\r\n        \"name\": \"Sally\",\r\n        \"mbox\": \"mailto:sally@example.com\"\r\n     },\r\n     \"verb\": {\r\n         \"id\": \"http://adlnet.gov/expapi/verbs/experienced\",\r\n         \"display\": {\"en-US\": \"experienced\"}\r\n         },\r\n     \"object\": {\r\n         \"id\": \"http://example.com/activities/solo-hang-gliding\",\r\n         \"definition\": {\r\n             \"name\": { \"en-US\": \"Hitchhiking\" }\r\n         }\r\n     }\r\n}');\r\n\r\n$request->setRequestUrl('http://127.0.0.1:8678/learn/statement');\r\n$request->setRequestMethod('POST');\r\n$request->setBody($body);\r\n\r\n$request->setHeaders(array(\r\n  'cache-control' => 'no-cache',\r\n  'content-type' => 'application/json'\r\n));\r\n\r\n$client->enqueue($request)->send();\r\n$response = $client->getResponse();\r\n\r\necho $response->getBody();\r\n```\r\n\r\n## To get a statement\r\n**Case -** I need to know the details of a particular user activity so that I can find who participated and what was really done.\r\n\r\nTo get details about a statement from the Statement ID, send a GET request.\r\n\r\n```http\r\nGET /learn/statement/<STATEMENT ID>\r\n```\r\n\r\nFor example:\r\n\r\n```http\r\nGET /learn/statement/a29f2f75-37cb-44b8-83fc-54a812a1d018\r\n```\r\n\r\nExample success response:\r\n\r\n```json\r\n{\r\n  \"Statement\":[\r\n    \"a29f2f75-37cb-44b8-83fc-54a812a1d018\",\r\n    \"{\\\"objectType\\\":\\\"Agent\\\",\\\"name\\\":\\\"Joe Schmoe\\\",\\\"mbox\\\":\\\"mailto:joe@example.com\\\"}\",\r\n    \"{\\\"id\\\":\\\"http://adlnet.gov/expapi/verbs/completed\\\",\\\"display\\\":{\\\"en-US\\\":\\\"completed\\\"}}\",\r\n    \"{\\\"objectType\\\":\\\"Activity\\\",\\\"id\\\":\\\"http://www.example.com/activities/001\\\",\\\"definition\\\":{\\\"name\\\":{\\\"en-US\\\":\\\"Example              Activity\\\"},\\\"type\\\":\\\"http://adlnet.gov/expapi/activities/course\\\"}}\",\r\n        1455111694507\r\n  ]\r\n}\r\n```\r\nA JavaScript example:\r\n\r\n```javascript\r\nvar settings = {\r\n  \"async\": true,\r\n  \"crossDomain\": true,\r\n  \"url\": \"http://127.0.0.1:8678/learn/statement/9e746713-055e-45de-a1d0-6044509bc52d\",\r\n  \"method\": \"GET\",\r\n  \"headers\": {\r\n    \"content-type\": \"application/json\",\r\n    \"cache-control\": \"no-cache\"\r\n  }\r\n}\r\n\r\n$.ajax(settings).done(function (response) {\r\n  console.log(response);\r\n});\r\n```\r\nA Python example:\r\n\r\n```python\r\nimport http.client\r\n\r\nconn = http.client.HTTPConnection(\"127.0.0.1:8678\")\r\n\r\nheaders = {\r\n    'content-type': \"application/json\",\r\n    'cache-control': \"no-cache\"\r\n    }\r\n\r\nconn.request(\"GET\", \"/learn/statement/9e746713-055e-45de-a1d0-6044509bc52d\", headers=headers)\r\n\r\nres = conn.getresponse()\r\ndata = res.read()\r\n\r\nprint(data.decode(\"utf-8\"))\r\n```\r\n\r\nA PHP example:\r\n\r\n```php\r\n<?php\r\n\r\n$client = new http\\Client;\r\n$request = new http\\Client\\Request;\r\n\r\n$request->setRequestUrl('http://127.0.0.1:8678/learn/statement/9e746713-055e-45de-a1d0-6044509bc52d');\r\n$request->setRequestMethod('GET');\r\n$request->setHeaders(array(\r\n  'cache-control' => 'no-cache',\r\n  'content-type' => 'application/json'\r\n));\r\n\r\n$client->enqueue($request)->send();\r\n$response = $client->getResponse();\r\n\r\necho $response->getBody();\r\n```\r\n\r\n## To get the statement time\r\n**Case -** I need to know when the user performed an activity.\r\n\r\nTo get the statement creation time, send a GET request.\r\n\r\n```http\r\nGET /learn/findtimeofstatement/<STATEMENT ID>\r\n```\r\n\r\nFor example:\r\n\r\n```http\r\nGET /learn/findtimeofstatement/a29f2f75-37cb-44b8-83fc-54a812a1d018\r\n```\r\n\r\nExample success response:\r\n\r\n```json\r\n{\"Statement Time\": \"Feb 12,2016 19:11\"}\r\n```\r\nA JavaScript example:\r\n\r\n```javascript\r\nvar settings = {\r\n  \"async\": true,\r\n  \"crossDomain\": true,\r\n  \"url\": \"http://127.0.0.1:8678/learn/findtimeofstatement/fdcfa8aa-9214-4a56-ade5-f9e655fcdbeb\",\r\n  \"method\": \"GET\",\r\n  \"headers\": {\r\n    \"content-type\": \"application/json\",\r\n    \"cache-control\": \"no-cache\"\r\n  }\r\n}\r\n\r\n$.ajax(settings).done(function (response) {\r\n  console.log(response);\r\n});\r\n```\r\nA Python example:\r\n\r\n```python\r\nimport http.client\r\n\r\nconn = http.client.HTTPConnection(\"127.0.0.1:8678\")\r\n\r\nheaders = {\r\n    'content-type': \"application/json\",\r\n    'cache-control': \"no-cache\",\r\n    'postman-token': \"276654ff-f336-5fcd-eefa-00305bf667c1\"\r\n    }\r\n\r\nconn.request(\"GET\", \"/learn/findtimeofstatement/fdcfa8aa-9214-4a56-ade5-f9e655fcdbeb\", headers=headers)\r\n\r\nres = conn.getresponse()\r\ndata = res.read()\r\n\r\nprint(data.decode(\"utf-8\"))\r\n```\r\n\r\nA PHP example:\r\n\r\n```php\r\n<?php\r\n\r\n$client = new http\\Client;\r\n$request = new http\\Client\\Request;\r\n\r\n$request->setRequestUrl('http://127.0.0.1:8678/learn/findtimeofstatement/fdcfa8aa-9214-4a56-ade5-f9e655fcdbeb');\r\n$request->setRequestMethod('GET');\r\n$request->setHeaders(array(\r\n  'postman-token' => '3365320b-0279-3c90-e0f7-1667ea862fbd',\r\n  'cache-control' => 'no-cache',\r\n  'content-type' => 'application/json'\r\n));\r\n\r\n$client->enqueue($request)->send();\r\n$response = $client->getResponse();\r\n\r\necho $response->getBody();\r\n```\r\n\r\n## To find all statements for an actor\r\n**Case -** How has this user learned something? Is there any way I can enumerate a list of all his activities?\r\n\r\nTo find all statements for an actor, send a POST request.\r\n\r\n```http\r\nPOST /learn/statement/findstatementsforactor\r\n```\r\nwith the following JSON request body:\r\n\r\n```json\r\n{\r\n\r\n\"actor\": {\r\n  \"objectType\": \"User\",\r\n  \"name\": \"Abel Osbert\",\r\n  \"mbox\": \"mailto:aosbert@example.com\"\r\n  }\r\n}\r\n```\r\n\r\nExample success response:\r\n\r\n```json\r\n{\"Statements\": [\r\n    \"36318877-208c-4ab5-a42b-a1ca3f45ca52\",\r\n    \"e2cd0c7a-a2e6-451c-b2ef-7fdb8031bef7\",\r\n    \"5ba063d8-61c3-4200-8326-eaa6f566e353\",\r\n    \"e2bf61b9-dd8f-4ece-97d3-094e57f35cad\",\r\n    \"5daa8b09-d982-42e6-9236-5883da2da08f\",\r\n    \"25017371-1d76-4134-be23-79938c4050a9\",\r\n    \"a29f2f75-37cb-44b8-83fc-54a812a1d018\"\r\n]}\r\n```\r\n\r\nEvery Statement denotes a discreet, recorded, learning action of the user. Use ```findstatementsforactor``` endpoint to get the Statement details. Note that you can pass any JSON payload as part of actor, verb, and object.\r\n\r\nA Python example:\r\n\r\n```python\r\nimport http.client\r\n\r\nconn = http.client.HTTPConnection(\"127.0.0.1:8678\")\r\n\r\nheaders = {\r\n    'content-type': \"application/json\",\r\n    'cache-control': \"no-cache\"\r\n    }\r\n\r\nconn.request(\"GET\", \"/learn/statement/9e746713-055e-45de-a1d0-6044509bc52d\", headers=headers)\r\n\r\nres = conn.getresponse()\r\ndata = res.read()\r\n\r\nprint(data.decode(\"utf-8\"))\r\n```\r\n\r\nA PHP example:\r\n\r\n```php\r\n<?php\r\n\r\n$curl = curl_init();\r\n\r\ncurl_setopt_array($curl, array(\r\n  CURLOPT_PORT => \"8678\",\r\n  CURLOPT_URL => \"http://127.0.0.1:8678/learn/findstatementsforactor\",\r\n  CURLOPT_RETURNTRANSFER => true,\r\n  CURLOPT_ENCODING => \"\",\r\n  CURLOPT_MAXREDIRS => 10,\r\n  CURLOPT_TIMEOUT => 30,\r\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\r\n  CURLOPT_CUSTOMREQUEST => \"POST\",\r\n  CURLOPT_POSTFIELDS => \"{\\n\\\"actor\\\": {\\n\\\"name\\\": \\\"Sally Glider\\\",\\n\\\"mbox\\\":\\\"mailto:sally@example.com\\\"\\n},\\n\\\"verb\\\": {\\n\\\"id\\\":\\\"http://adlnet.gov/expapi/verbs/experienced\\\",\\n\\\"display\\\": {\\\"en-US\\\":\\\"experienced\\\"}\\n},\\n\\\"object\\\": {\\n\\\"id\\\":\\\"http://example.com/activities/solo-hang-gliding\\\",\\n\\\"definition\\\": {\\n\\\"name\\\": {\\\"en-US\\\": \\\"Solo Hang Gliding\\\"}\\n}\\n}\\n}\",\r\n  CURLOPT_HTTPHEADER => array(\r\n    \"cache-control: no-cache\",\r\n    \"content-type: application/json\"\r\n  ),\r\n));\r\n\r\n$response = curl_exec($curl);\r\n$err = curl_error($curl);\r\n\r\ncurl_close($curl);\r\n\r\nif ($err) {\r\n  echo \"cURL Error #:\" . $err;\r\n} else {\r\n  echo $response;\r\n}\r\n```\r\n\r\nOr, simply cURL it up:\r\n\r\n```curl\r\ncurl -X POST -H \"Content-Type: application/json\" -H \"Cache-Control: no-cache\"\r\n -d '{\r\n    \"actor\": {\r\n        \"name\": \"Sally Glider\",\r\n        \"mbox\": \"mailto:sally@example.com\"\r\n     },\r\n     \"verb\": {\r\n         \"id\": \"http://adlnet.gov/expapi/verbs/experienced\",\r\n         \"display\": {\"en-US\": \"experienced\"}\r\n         },\r\n     \"object\": {\r\n         \"id\": \"http://example.com/activities/solo-hang-gliding\",\r\n         \"definition\": {\r\n             \"name\": { \"en-US\": \"Solo Hang Gliding\" }\r\n         }\r\n     }\r\n}' \"http://127.0.0.1:8678/learn/findstatementsforactor\"\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}